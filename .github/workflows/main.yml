# .github/workflows/deploy.yml
name: Deploy to Server via SSH (verbose)

on:
  push:
    branches:
      - master     # change if you deploy from another branch

jobs:
  deploy:
    name: Build & restart on server
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------------------------------
      # 1. Checkout the repository
      # -----------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------
      # 2. Start ssh-agent and add the private key
      # -----------------------------------------------------------
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # -----------------------------------------------------------
      # 3. Add host fingerprint to known_hosts
      # -----------------------------------------------------------
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true
          echo "Known hosts now contains:"
          cat ~/.ssh/known_hosts

      # -----------------------------------------------------------
      # 4. Connect, pull, install, build, restart – with full logging
      # -----------------------------------------------------------
      - name: Deploy to server
        run: |
          echo "### SSH connection debug (verbose mode) ###"
          ssh -vvv -o BatchMode=yes -o StrictHostKeyChecking=no \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                set -exuo pipefail

                echo "=== Connected to $(hostname) ==="
                echo "→ cd to project directory"
                cd ${{ secrets.SSH_DIR }}

                echo "→ Current commit:"
                git --no-pager log -1 --oneline || true

                echo "→ Resetting local changes"
                git reset --hard

                echo "→ Pulling latest from ${{ secrets.SSH_BRANCH }}"
                git pull origin ${{ secrets.SSH_BRANCH }}

                echo "→ Node version:"
                node -v || true

                echo "→ Installing dependencies"
                if [ -f package-lock.json ]; then
                  npm ci
                elif [ -f yarn.lock ]; then
                  yarn install --frozen-lockfile
                else
                  npm install
                fi

                echo "→ Building project"
                npm run build

                echo "→ Restarting with PM2"
                if pm2 list | grep -q "app"; then
                  pm2 reload ecosystem.config.js --only app
                else
                  pm2 start ecosystem.config.js --only app
                fi

                echo "✅ Deploy complete on $(date)"
          EOF
